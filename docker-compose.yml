version: '2'
services:
    zookeeper:
        image: zookeeper:latest
        container_name: microservice-zookeeper
        ports:
            - 2181:2181
    kafka:
        image: wurstmeister/kafka:2.11-1.1.1
        container_name: microservice-kafka
        depends_on:
            - zookeeper
        environment:
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_DELETE_TOPIC_ENABLE: 'true'
            KAFKA_ADVERTISED_HOST_NAME: localhost
            KAFKA_CREATE_TOPICS: 'microservice-dev-custom-framework-uom-upload:1:1'
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        ports:
            - 9092:9092
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
    redis:
        image: redis:5
        ports:
            - ${REDIS_PORT}:6379
        networks:
            - webnet
    postgres:
        image: postgres:11
        volumes:
            - data-volume:/data/db
        # command: -p 5434
        ports:
            - ${DATABASE_PORT}:5432
        environment:
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            POSTGRES_USER: ${DATABASE_USER}
            POSTGRES_DB: ${DATABASE_NAME}
            # POSTGRES_HOST: ${DATABASE_HOST}
        networks:
            - webnet
networks:
    webnet:
volumes:
    data-volume:
